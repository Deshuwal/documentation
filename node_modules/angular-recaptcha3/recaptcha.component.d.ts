import { ElementRef, EventEmitter, NgZone, AfterViewInit } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { IRecaptchaOptionType } from './models/recaptcha-option-type.interface';
import { ReCaptchaService } from './recaptcha.service';
export declare class ReCaptchaComponent implements AfterViewInit, ControlValueAccessor {
    private _zone;
    private _captchaService;
    private option;
    sitekey: string;
    size: string;
    theme: string;
    type: string;
    tabindex: number;
    badge: string;
    language: string;
    hide: boolean;
    captchaResponse: EventEmitter<string>;
    captchaExpired: EventEmitter<any>;
    targetRef: ElementRef;
    widgetId: any;
    private ngUnsubscribe;
    onChange: Function;
    onTouched: Function;
    constructor(_zone: NgZone, _captchaService: ReCaptchaService, option: IRecaptchaOptionType);
    ngAfterViewInit(): void;
    reset(): void;
    setWidgetId(): void;
    render(target: any): any;
    execute(options?: any): any;
    getResponse(): string;
    writeValue(newValue: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    ngOnDestroy(): void;
    private recaptchaCallback;
    private recaptchaExpiredCallback;
    private grecaptchaReset;
    private getSiteKey;
    private getBadge;
    private getTheme;
    private getType;
    private getTabindex;
}
