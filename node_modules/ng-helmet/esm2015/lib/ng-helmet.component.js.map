{"version":3,"file":"ng-helmet.component.js","sourceRoot":"","sources":["../../../../../packages/ng-helmet/src/lib/ng-helmet.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,SAAS,EACT,eAAe,EACf,UAAU,EACV,WAAW,EAEX,SAAS,GACV,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,sBAAsB,EAAE,MAAM,6BAA6B,CAAC;AACrE,OAAO,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAC;AACnE,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,aAAa,EAAc,OAAO,EAAE,MAAM,MAAM,CAAC;AAC1D,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAEhD,IAAI,SAAS,GAAG,CAAC,CAAC;AAMlB,MAAM,OAAO,iBAAiB;IAC5B,YACmB,EAA2B,EAC3B,eAAgC;QADhC,OAAE,GAAF,EAAE,CAAyB;QAC3B,oBAAe,GAAf,eAAe,CAAiB;QAGlC,OAAE,GAAG,SAAS,EAAE,CAAC;QAGzB,SAAI,GAAG,aAAa,IAAI,CAAC,EAAE,EAAE,CAAC;QActB,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;IAnB7C,CAAC;IAqBJ,kBAAkB;QAChB,IAAI,CAAC,eAAe,CAAC,UAAU,CAC7B,IAAI,CAAC,EAAE,EACP,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CACtD,CAAC;QACF,aAAa,CAAC;YACZ,IAAI,CAAC,MAAM,CAAC,OAEX;YACD,IAAI,CAAC,KAAK,CAAC,OAA6D;SACzE,CAAC;aACC,IAAI,CACH,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,EACrE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CACzB;aACA,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACzB,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;IACnC,CAAC;;;YAnDF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,QAAQ,EAAE,EAAE;aACb;;;YAjBC,UAAU;YAQH,eAAe;;;mBAkBrB,WAAW,SAAC,IAAI;qBAGhB,eAAe,SAAC,sBAAsB,EAAE;oBACvC,IAAI,EAAE,UAAU;oBAChB,uBAAuB,EAAE,IAAI;iBAC9B;oBAGA,eAAe,SAAC,qBAAqB,EAAE;oBACtC,IAAI,EAAE,UAAU;oBAChB,uBAAuB,EAAE,IAAI;iBAC9B","sourcesContent":["import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostBinding,\n  OnDestroy,\n  QueryList,\n} from \"@angular/core\";\nimport { NgHelmetTitleComponent } from \"./ng-helmet-title.component\";\nimport { NgHelmetMetaComponent } from \"./ng-helmet-meta.component\";\nimport { buildHelmet } from \"./ng-helmet.model\";\nimport { NgHelmetService } from \"./ng-helmet.service\";\nimport { combineLatest, Observable, Subject } from \"rxjs\";\nimport { map, takeUntil } from \"rxjs/operators\";\n\nlet currentId = 0;\n\n@Component({\n  selector: \"ng-helmet\",\n  template: ``,\n})\nexport class NgHelmetComponent implements AfterContentInit, OnDestroy {\n  constructor(\n    private readonly el: ElementRef<HTMLElement>,\n    private readonly ngHelmetService: NgHelmetService\n  ) {}\n\n  private readonly id = currentId++;\n\n  @HostBinding(\"id\")\n  readonly elId = `ng-helmet-${this.id}`;\n\n  @ContentChildren(NgHelmetTitleComponent, {\n    read: ElementRef,\n    emitDistinctChangesOnly: true,\n  })\n  readonly titles!: QueryList<ElementRef<HTMLTitleElement>>;\n\n  @ContentChildren(NgHelmetMetaComponent, {\n    read: ElementRef,\n    emitDistinctChangesOnly: true,\n  })\n  readonly metas!: QueryList<ElementRef<HTMLMetaElement>>;\n\n  private readonly destroy$ = new Subject<void>();\n\n  ngAfterContentInit(): void {\n    this.ngHelmetService.pushHelmet(\n      this.id,\n      buildHelmet(this.titles.get(0), this.metas.toArray())\n    );\n    combineLatest([\n      this.titles.changes as Observable<\n        QueryList<ElementRef<HTMLTitleElement>>\n      >,\n      this.metas.changes as Observable<QueryList<ElementRef<HTMLMetaElement>>>,\n    ])\n      .pipe(\n        map(([titles, metas]) => buildHelmet(titles.get(0), metas.toArray())),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((helmet) => this.ngHelmetService.pushHelmet(this.id, helmet));\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.ngHelmetService.popHelmet();\n  }\n}\n"]}