export function buildHelmet(titleEl, metaEls) {
    return Object.assign(Object.assign({}, (titleEl && { title: titleEl.nativeElement.text })), { metas: metaEls.map(metaToDefinition).reduce((acc, el) => {
            acc[attrSelector(el)] = el;
            return acc;
        }, {}) });
}
function metaToDefinition({ nativeElement: el, }) {
    const { name, content, httpEquiv } = el;
    const property = el.getAttribute("property");
    return Object.assign(Object.assign(Object.assign(Object.assign({}, (name && { name })), (content && { content })), (httpEquiv && { httpEquiv })), (property && { property }));
}
function attrSelector(meta) {
    if (meta.name) {
        return `name='${meta.name}'`;
    }
    else if (meta.property) {
        return `property='${meta.property}'`;
    }
    throw new Error(`MetaDefinition does not have 'name' or 'property'`);
}
//# sourceMappingURL=ng-helmet.model.js.map