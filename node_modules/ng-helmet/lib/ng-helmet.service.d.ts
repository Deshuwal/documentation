import { Meta, Title } from "@angular/platform-browser";
import { NgHelmet } from "./ng-helmet.model";
export declare class NgHelmetService {
    private readonly title;
    private readonly meta;
    private readonly config?;
    constructor(title: Title, meta: Meta, config?: Readonly<{
        baseTitle?: string | undefined;
    }> | undefined);
    private readonly helmetStack;
    /**
     * Push a new helmet on to the helmetStack and update the document head.
     * If the helmet id already exists in the stack (i.e. the ng-helmet content
     * was updated), this method simply updates the helmet at the existing position.
     * @param id The id of the NgHelmetComponent this helmet comes from.
     * @param helmet the NgHelmet data harvested from the component.
     */
    pushHelmet(id: number, helmet: NgHelmet): void;
    /**
     * Pop the top element off the helmetStack and update the document head.
     */
    popHelmet(): void;
    /**
     * Compute the current helmet from the stack.
     * @returns The current helmet.
     */
    private computeHelmet;
    /**
     * Apply the given helmet to the document header.
     * @param helmet The helmet to apply.
     */
    private applyHelmet;
    /**
     * Apply the MetaDefinitions to the document head.
     * If the MetaDefinition has no content, this method will remove the
     * corresponding tag.
     * @param metas The MetaDefinitions to apply to the document.
     */
    private applyMetaDefinitions;
}
